plugins {
    id "org.sonarqube" version "2.6"
    id 'java'
    id 'jacoco'
}

ext {
    PUBLISH_GROUP_ID = 'com.github.grishberg'
    PUBLISH_ARTIFACT_ID = 'AndroidEmulatorManager'
    PUBLISH_VERSION = '0.2.0'
}

group 'com.github.grishberg'
version '0.2.1'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

dependencies {
    compile 'com.android.tools.build:gradle:2.3.0'
    testCompile group: 'junit', name: 'junit', version: '4.12'
    testCompile "org.mockito:mockito-core:2.+"
    compile gradleApi()
    compile localGroovy()
    compile 'com.android.tools.ddms:ddmlib:25.3.0'
    // https://mvnrepository.com/artifact/org.apache.commons/commons-lang3
    compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.0'
    // https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-core
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-core', version: '2.9.2'
}


sourceSets {
    test {
        java.srcDir 'src/test/unit/java'
    }
    integration {
        java.srcDir 'src/test/integration/java'
        resources.srcDir 'src/test/resources'
        compileClasspath += main.output + test.output
        runtimeClasspath += main.output + test.output
    }
}

configurations {
    integrationCompile.extendsFrom testCompile
    integrationRuntime.extendsFrom testRuntime
}

task integration(type: Test, description: 'Runs the integration tests.', group: 'Verification') {
    testClassesDir = sourceSets.integration.output.classesDir
    classpath = sourceSets.integration.runtimeClasspath
}

jacocoTestReport {
    reports {
        xml.enabled = true
        html.enabled = false
    }
}
tasks.sonarqube.dependsOn jacocoTestReport


test {
    jacoco {
        append = true
        includeNoLocationClasses = true
    }
}
apply from: 'sonar.gradle'

//need to call  ./gradlew clean build generateRelease
apply from: 'publish.gradle'
