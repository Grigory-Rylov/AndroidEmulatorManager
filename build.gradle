plugins {
    id "org.sonarqube" version "2.6"
    id 'java'
    id 'groovy'
    id 'jacoco'
    id "com.jfrog.bintray" version "1.7.3"
    id 'org.jetbrains.kotlin.jvm' version '1.3.61'
}

group 'com.github.grishberg'
version '0.3.17'

ext {
    PUBLISH_GROUP_ID = group
    PUBLISH_ARTIFACT_ID = 'android-emulator-manager'
    PUBLISH_VERSION = version
}

sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

dependencies {
    compile 'com.android.tools.build:gradle:2.3.0'
    testCompile group: 'junit', name: 'junit', version: '4.12'
    testCompile "org.mockito:mockito-core:2.+"
    compile gradleApi()
    compile localGroovy()
    compile 'com.android.tools.ddms:ddmlib:25.3.0'
    // https://mvnrepository.com/artifact/commons-io/commons-io
    compile group: 'commons-io', name: 'commons-io', version: '2.7'

    // https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-core
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-core', version: '2.9.2'
    compile group: 'com.google.code.findbugs', name: 'jsr305', version: '3.0.0'

    compile "org.slf4j:slf4j-api:1.7.25"
    compile "org.slf4j:slf4j-log4j12:1.7.25"
    compile group: 'log4j', name: 'log4j', version: '1.2.17'

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
}


sourceSets {
    test {
        java.srcDir 'src/test/unit/java'
    }
    integration {
        java.srcDir 'src/test/integration/java'
        resources.srcDir 'src/test/resources'
        compileClasspath += main.output + test.output
        runtimeClasspath += main.output + test.output
    }
}

configurations {
    integrationCompile.extendsFrom testCompile
    integrationRuntime.extendsFrom testRuntime
}

task integration(type: Test, description: 'Runs the integration tests.', group: 'Verification') {
    testClassesDirs = sourceSets.integration.output.classesDirs.filter{}
    classpath = sourceSets.integration.runtimeClasspath
}

jacocoTestReport {
    reports {
        xml.enabled = true
        html.enabled = false
    }
}
tasks.sonarqube.dependsOn jacocoTestReport


test {
    jacoco {
        append = true
        includeNoLocationClasses = true
    }
}
apply from: 'sonar.gradle'
apply plugin: 'kotlin'

//need to call  ./gradlew clean build generateRelease
apply from: 'publish.gradle'

// ./gradlew bintrayUpload
apply from: 'deploy_in_jcenter.gradle'

apply plugin: 'maven-publish'
// ./gradlew publishToMavenLocal
publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }
}
compileKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}
compileTestKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}
